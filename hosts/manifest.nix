# hosts/manifest.nix
# This file should return an attribute set where keys are hostnames.
{
  "rhodium-desktop" = { # Example hostname
    system = "x86_64-linux"; # Or "aarch64-linux"

    # NixOS modules to import for this host.
    # These are merged with the defaults from lib/default.nix
    modules = [
      # Import the main desktop profile from your flake's system modules.
      # The ({ rhodium, ... }: ...) allows accessing specialArgs.rhodium
      ({ rhodium, ... }: rhodium.system.desktop)

      # Host-specific hardware configuration (usually generated by nixos-generate-config)
      ./rhodium-desktop/hardware-configuration.nix # Create this if it doesn't exist

      # Other host-specific NixOS modules or configurations
      # { services.openssh.enable = true; }
    ];

    # Define users for this host and their Home Manager configurations.
    users = {
      "pabloagn" = { # Your username
        # homeModules can be used to add user-specific HM modules for this host only.
        # Often, the main user configuration (users/pabloagn.nix) will import a profile
        # like rhodium.home.profiles.desktop, which is usually sufficient.
        # homeModules = [ ../home/specific-for-pabloagn-on-desktop.nix ];
      };
      # "anotheruser" = { homeModules = [ ... ]; };
    };

    # Other host-specific NixOS settings
    # These will be applied directly to the NixOS configuration for this host.
    # Example:
    # networking.hostName = "rhodium-desktop"; # Already set by lib/default.nix from hostname
    time.timeZone = "America/New_York"; # Set your timezone
    i18n.defaultLocale = "en_US.UTF-8";
    console.keyMap = "us";
  };

  # "rhodium-laptop" = {
  #   system = "x86_64-linux";
  #   modules = [
  #     ({ rhodium, ... }: rhodium.system.desktop) # Also a desktop
  #     ./rhodium-laptop/hardware-configuration.nix
  #     # Laptop specific modules, e.g. for power management
  #     # ../modules/system/laptop.nix
  #   ];
  #   users = { "pabloagn" = {}; };
  #   time.timeZone = "Europe/Madrid";
  # };
}
